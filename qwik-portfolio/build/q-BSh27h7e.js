import{m as s,R as a,M as n,F as c}from"./q-CByD_zVH.js";const i={title:"Choosing Between useState and useRef in React",meta:[{name:"description",content:"Understand the differences between useState and useRef in React to make informed decisions on which to use based on your component’s needs and performance considerations."}],styles:[],links:[],scripts:[],frontmatter:{pubDate:"2022-01-20",tags:["react","usestate","useref"],image:"should-you-use-usestate-or-useref.avif"}},r={title:"Choosing Between useState and useRef in React",description:"Understand the differences between useState and useRef in React to make informed decisions on which to use based on your component’s needs and performance considerations.",pubDate:"2022-01-20",tags:["react","usestate","useref"],image:"should-you-use-usestate-or-useref.avif"};function o(t){const e={code:"code",em:"em",img:"img",li:"li",p:"p",pre:"pre",span:"span",strong:"strong",ul:"ul",...t.components};return n(c,{children:[n(e.p,{children:[n(e.strong,{children:n(e.em,{children:"useState"})})," and ",n(e.strong,{children:n(e.em,{children:"useRef"})})," both are used to store component state in React. But there is a fundamental difference between them. They work differently."]}),`
`,n(e.p,{children:[n(e.strong,{children:n(e.em,{children:"useState"})})," copies the data and returns that data as state. On the other hand ",n(e.strong,{children:n(e.em,{children:"useRef"})})," stores the reference to that data. For better understanding let's see a simple example of what happens when we assign data to a variable in JavaScript. I found out that these two work exactly the same way (from my experience)."]}),`
`,n(e.ul,{children:[`
`,n(e.li,{children:"Example 1:"}),`
`]}),`
`,n(e.pre,{children:n(e.code,{class:"language-js",children:[n(e.span,{class:"token keyword",children:"const"})," value1 ",n(e.span,{class:"token operator",children:"="})," ",n(e.span,{class:"token punctuation",children:"["}),n(e.span,{class:"token number",children:"1"}),n(e.span,{class:"token punctuation",children:","})," ",n(e.span,{class:"token number",children:"2"}),n(e.span,{class:"token punctuation",children:","})," ",n(e.span,{class:"token number",children:"3"}),n(e.span,{class:"token punctuation",children:","})," ",n(e.span,{class:"token number",children:"4"}),n(e.span,{class:"token punctuation",children:"]"}),n(e.span,{class:"token punctuation",children:";"}),`
`,n(e.span,{class:"token keyword",children:"const"})," value2 ",n(e.span,{class:"token operator",children:"="})," value1",n(e.span,{class:"token punctuation",children:";"}),`

console`,n(e.span,{class:"token punctuation",children:"."}),n(e.span,{class:"token function",children:"log"}),n(e.span,{class:"token punctuation",children:"("}),"value1",n(e.span,{class:"token punctuation",children:")"}),n(e.span,{class:"token punctuation",children:";"})," ",n(e.span,{class:"token comment",children:"// [1, 2, 3, 4]"}),`
console`,n(e.span,{class:"token punctuation",children:"."}),n(e.span,{class:"token function",children:"log"}),n(e.span,{class:"token punctuation",children:"("}),"value2",n(e.span,{class:"token punctuation",children:")"}),n(e.span,{class:"token punctuation",children:";"})," ",n(e.span,{class:"token comment",children:"// [1, 2, 3, 4]"}),`
console`,n(e.span,{class:"token punctuation",children:"."}),n(e.span,{class:"token function",children:"log"}),n(e.span,{class:"token punctuation",children:"("}),"value1 ",n(e.span,{class:"token operator",children:"==="})," value2",n(e.span,{class:"token punctuation",children:")"}),n(e.span,{class:"token punctuation",children:";"})," ",n(e.span,{class:"token comment",children:"// true"}),`
`]})}),`
`,n(e.ul,{children:[`
`,n(e.li,{children:"Example 2:"}),`
`]}),`
`,n(e.pre,{children:n(e.code,{class:"language-js",children:[n(e.span,{class:"token keyword",children:"const"})," value1 ",n(e.span,{class:"token operator",children:"="})," ",n(e.span,{class:"token punctuation",children:"["}),n(e.span,{class:"token number",children:"1"}),n(e.span,{class:"token punctuation",children:","})," ",n(e.span,{class:"token number",children:"2"}),n(e.span,{class:"token punctuation",children:","})," ",n(e.span,{class:"token number",children:"3"}),n(e.span,{class:"token punctuation",children:","})," ",n(e.span,{class:"token number",children:"4"}),n(e.span,{class:"token punctuation",children:"]"}),n(e.span,{class:"token punctuation",children:";"}),`
`,n(e.span,{class:"token keyword",children:"const"})," value2 ",n(e.span,{class:"token operator",children:"="})," ",n(e.span,{class:"token punctuation",children:"["}),n(e.span,{class:"token number",children:"1"}),n(e.span,{class:"token punctuation",children:","})," ",n(e.span,{class:"token number",children:"2"}),n(e.span,{class:"token punctuation",children:","})," ",n(e.span,{class:"token number",children:"3"}),n(e.span,{class:"token punctuation",children:","})," ",n(e.span,{class:"token number",children:"4"}),n(e.span,{class:"token punctuation",children:"]"}),n(e.span,{class:"token punctuation",children:";"}),`

console`,n(e.span,{class:"token punctuation",children:"."}),n(e.span,{class:"token function",children:"log"}),n(e.span,{class:"token punctuation",children:"("}),"value1",n(e.span,{class:"token punctuation",children:")"}),n(e.span,{class:"token punctuation",children:";"})," ",n(e.span,{class:"token comment",children:"// [1, 2, 3, 4]"}),`
console`,n(e.span,{class:"token punctuation",children:"."}),n(e.span,{class:"token function",children:"log"}),n(e.span,{class:"token punctuation",children:"("}),"value2",n(e.span,{class:"token punctuation",children:")"}),n(e.span,{class:"token punctuation",children:";"})," ",n(e.span,{class:"token comment",children:"// [1, 2, 3, 4]"}),`
console`,n(e.span,{class:"token punctuation",children:"."}),n(e.span,{class:"token function",children:"log"}),n(e.span,{class:"token punctuation",children:"("}),"value1 ",n(e.span,{class:"token operator",children:"==="})," value2",n(e.span,{class:"token punctuation",children:")"}),n(e.span,{class:"token punctuation",children:";"})," ",n(e.span,{class:"token comment",children:"// false"}),`
`]})}),`
`,n(e.p,{children:"Take a look at these examples. Two variables output same values but when comparing with each other, the output is different. Why does this happen?"}),`
`,n(e.p,{children:["It happens, because in the first case by declaring ",n(e.code,{children:"value1 = value2"})," we're assigning it a reference to ",n(e.code,{children:"value1"}),". As the ",n(e.code,{children:"value2"})," is referencing to ",n(e.code,{children:"value1"}),", it's like comparing ",n(e.code,{children:"value1 ===  value1"})," which is true cause the memory location is the same. Also in any given point of time, if you change the value of ",n(e.code,{children:"value2"})," then ",n(e.code,{children:"value1"}),` will be changed too.
`,n(e.img,{src:"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7el5o89vgfy3nr8at4rn.png",alt:"Image description"})]}),`
`,n(e.p,{children:[`But in the second case, we're not referencing any variable to another. Their values are stored in their own memory location.
`,n(e.img,{src:"https://dev-to-uploads.s3.amazonaws.com/uploads/articles/axxlcqne90vjftfvyzhi.png",alt:"Image description"})]}),`
`,n(e.p,{children:["And while comparing, compilers aren't comparing values, instead comparing memory location. As the location is different, we're getting ",n(e.code,{children:"false"})," as the output."]}),`
`,n(e.p,{children:["And this same situation occurs for the ",n(e.code,{children:"useState"})," and the ",n(e.code,{children:"useRef"}),` hook.
So, if you need to store data then use `,n(e.code,{children:"useState"})," hook and if you need to store reference to anything in the component, use ",n(e.code,{children:"useRef"})," hook."]})]})}const u=()=>s(a,{children:s(o,{},3,null)},3,"1HdE3N-c");export{u as default,r as frontmatter,i as head};
